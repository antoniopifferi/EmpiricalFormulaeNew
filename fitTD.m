function fitTD()
close all
clear all

c=0.299792458; % mm ps^(-1)

rho = 20;

tmax = 10;  %ns
%mua = 0.03;%[0.001:0.001:0.05];
mus = 0.5:0.5:5;
nin = 1.4;
nout = 1.;
s0 = 1000;

v =c/nin;
t0 = rho/v * 1e-3;
a = zeros(1,length(mus));
b = zeros(1,length(mus));
%figure(1),hold on
%% Try a fit with a power law for different mus using scaling relations
% $$ Z(\rho) = at^b $$
for i = 1:numel(mus)
    
t = 1e-2:1e-2:tmax/mus(i);
Z = 0.5*Zmean(t,s0,mus(i),nin,nout,rho);
t = t*1e3;


t = t * mus(i);
Z = Z * mus(i);
%figure(1),plot(t,Z)

result = createFit(t,Z)
a(i) = result.a;
b(i) = result.b;
end
figure,plot(mus,[a',b']),legend('a','b')
xlabel \mu_s

%% fit
function [fitresult, gof] = createFit(t, Z)
%CREATEFIT(T,Z)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : t
%      Y Output: Z
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 23-May-2016 15:48:38


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( t, Z );

% Set up fittype and options.
ft = fittype( 'power1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.121492533685964 0.574819090988534];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Fit Z(t)' );
subplot(2,1,1)
plot( fitresult, xData, yData );
legend('Z vs. t', 'Fit Z(t)', 'Location', 'NorthEast' );
% Label axes
xlabel t
ylabel Z
grid on
subplot(2,1,2)
plot( fitresult, xData, yData, 'residuals' );
